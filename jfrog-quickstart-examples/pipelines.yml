resources:
  - name: myGitRepo
    type: GitRepo
    configuration:
      gitProvider: my_github
      path: HKTFrog/project-examples
      branches:
        include: master
  - name: myBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: SampleApp
      buildNumber: 1
  - name: myOWH
    type: OutgoingWebhook
    configuration:
      webhookName: MyOutgoingWebhookIntegration
      path: /url
      headers:
        content-type: application/x-www-form-urlencoded
  - name: myIWH
    type: IncomingWebhook
    configuration:
      webhookName: MyIncomingWebhookIntegration
      
pipelines:
  - name: basic_pipeline
    configuration:
      environmentVariables:
        readOnly:
          my_env_var: "hello"


    steps:
      - name: step_1
        type: Bash
        configuration:
          inputResources:
            - name: myGitRepo
            - name: myIWH
          outputResources:
            - name: myBuildInfo
        execution:
          onExecute:
            - echo $my_env_var
            - if [ -z $app_version ]; then add_pipeline_variables app_version=1.0.0; else app_version=$(bump_semver $app_version minor); fi
            - write_output myBuildInfo "buildNumber=$app_version"
            - add_run_variables run_var="hello"
            - echo "$res_myIWH_payload" | jq '.' > payload.json
            - add_run_variables project=read_json payload.json "project"
            - add_run_variables stage=read_json payload.json "stage"
            - add_run_variables service=read_json payload.json "service"
            - add_run_variables shkeptncontext=read_json payload.json "shkeptncontext"
            - add_run_variables id=read_json payload.json "id"
            - add_run_variables jsonX=$(cat <<-END {"data":{"project":"$project","stage":"$stage","service":"$service","status":"succeeded","result":"pass","mytask-interactive":{"link":"https://a-back-link-to-result","more":"even more data"}},"source":"cas-quickstart","specversion":"1.0","type":"sh.keptn.event.mytask-interactive.finished","shkeptncontext":"$shkeptncontext","triggeredid":"$id"}END) 
            - echo "$jsonX"
      - name: step_2
        type: Bash
        configuration:
          inputResources:
            - name: myBuildInfo
          runtime:
            type: image
            image:
              auto:
                language: java
                versions: ['11']
        execution:
          onExecute:
            - echo $run_var
            - echo $res_myBuildInfo_buildNumber
      - name: step_3
        type: Bash
        configuration:
          environmentVariables:
            step_env_var1: "hello"
          inputSteps:
            - name: step_2
        execution:
          onExecute:
            - echo $step_env_var1
      - name: step_4
        type: Bash
        configuration:
          inputSteps:
            - name: step_2
        execution:
          onExecute:
            - echo $app_version
      - name: step_5
        type: Bash
        configuration:
          inputSteps:
            - name: step_3
            - name: step_4
          outputResources:
            - name: myOWH
          integrations:
            - name: my_github
        execution:
          onExecute:
            - 'curl -H "Authorization: token ${int_my_github_token}" ${int_my_github_url}/rate_limit' 
            - 'curl -X POST "https://pye55831.cloudautomation.live.dynatrace.com/api/v1/event" -H "accept: application/json" -H "x-token: OUvGHNDLQm4LVxiawg1EvSlbDPT98MBbztBpLHZ4LPXzR" -H "Content-Type: application/json" -d "$json"'
            - formUrlEncodedPayload="foo=bar&runNumber=$run_number&stepName=$step_name"
            - set_payload myOWH "$formUrlEncodedPayload"
