resources:
  - name: myIWH
    type: IncomingWebhook
    configuration:
      webhookName: MyIncomingWebhookIntegration

pipelines:
  - name: basic_pipeline
    steps:
      - name: step_1
        type: Bash
        configuration:
          inputResources:
            - name: myIWH
        execution:
          onExecute:
            - echo "$res_myIWH_payload" | jq '.' > payload.json
            - |
              add_run_variables my_payload="$(jq -n \
              --arg pr $(read_json payload.json "project") \
              --arg st $(read_json payload.json "stage") \
              --arg sv $(read_json payload.json "service") \
              --arg sh $(read_json payload.json "shkeptncontext") \
              --arg id $(read_json payload.json "id") \
              '{data:{project:$pr,stage:$st,service:$sv,status:"succeeded",result:"pass"},source:"cas-quickstart",specversion:"1.0",type:"sh.keptn.event.mytask-interactive.finished",shkeptncontext:$sh,triggeredid:$id}')"
            - echo "$my_payload"
      - name: step_2
        type: Bash
        configuration:
          integrations:
            - name: DynaCred
          inputSteps:
            - name: step_1
        execution:
          onExecute:
            - 'curl -X POST "$int_DynaCred_URL" -H "accept: application/json" -H "x-token: $int_DynaCred_API_TOKEN" -H "Content-Type: application/json" -d "$my_payload"'

      - name: slo
        type: Bash
        configuration:
          affinityGroup: slo
          integrations:
            - name: DynaCred2
          inputSteps:
            - name: step_2
        execution:
          onExecute:
            - |
              docker run  \
                  --env EVALUATION_RULE="pass_on_warning" \
                  --env KEPTN_BASE_URL=$int_DynaCred2_URL \
                  --env KEPTN_API_TOKEN=$int_DynaCred2_API_TOKEN \
                  --env KEPTN_PROJECT=demo \
                  --env KEPTN_SERVICE=casdemoapp \
                  --env KEPTN_STAGE=production \
                  dtdemos/keptn-automation:0.2.0 \
                  slo-evaluation.sh
